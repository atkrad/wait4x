name: Wait4X CI

on:
  push:
    branches:
      - 'master'
      - 'release/*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.18.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.x

    - name: Define output variables
      id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ${{ steps.go-cache-paths.outputs.go-build }}
          ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: go-fmt
      run: make check-gofmt

    - name: go-vet
      run: go vet ./...

    - name: revive
      run: |
        go install github.com/mgechev/revive@v1.1.4
        make check-revive

  test:
    name: Test
    needs: check
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Define output variables
      id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ${{ steps.go-cache-paths.outputs.go-build }}
          ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test Wait4X
      run: make test

    - name: Convert coverage to lcov
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.go-version == '1.18.x' }}
      uses: jandelgado/gcov2lcov-action@v1.0.0
      with:
        infile: coverage.out
        outfile: coverage.lcov

    - name: Coveralls
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.go-version == '1.18.x' }}
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.lcov

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            atkrad/wait4x
          ### versioning strategy
          ### push semver tag v3.2.1 on master (default branch)
          # atkrad/wait4x:2.2.0
          # atkrad/wait4x:2.2
          # atkrad/wait4x:2
          # atkrad/wait4x:latest
          ### push semver pre-release tag v3.0.0-beta.1 on master (default branch)
          # atkrad/wait4x:3.0.0-beta.1
          ### push on master (default branch)
          # atkrad/wait4x:edge
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr
            type=edge,branch=master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build artifacts
        uses: docker/bake-action@v2
        with:
          targets: artifact

      - name: Move artifacts
        run: |
          mv ./dist/**/* ./dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wait4x-artifacts
          path: ./dist/*
          if-no-files-found: error

      - name: Build images
        uses: docker/bake-action@v2
        with:
          push: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
          targets: image
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          short-description: ${{ github.event.repository.description }}

      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: true
          files: |
            dist/*.tar.gz
            dist/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
