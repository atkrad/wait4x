on:
  push:
  pull_request:

name: Wait4X CI
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - name: Use Golang 1.17.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.17.x

    - uses: actions/checkout@v3

    - name: go-fmt
      run: make check-gofmt

    - name: go-vet
      run: go vet ./...

    - name: revive
      run: |
        go install github.com/mgechev/revive@v1.1.4
        make check-revive

  test:
    name: Test
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.16.x, 1.17.x, 1.18.x]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Test Wait4X
      run: make test

    - name: Coveralls
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-latest' && matrix.go-version == '1.18.x' }}
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.COVERALLS_TOKEN }}

  build:
    name: Build
    needs: test
    strategy:
      matrix:
        go-os: [linux, windows, darwin]
        go-arch: [amd64]
        go-version: [1.18.x]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build Wait4X
      run: make build
      env:
        GOOS: ${{ matrix.go-os }}
        GOARCH: ${{ matrix.go-arch }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: wait4x-${{ matrix.go-os }}-${{ matrix.go-arch }}
        path: bin/wait4x-${{ matrix.go-os }}-${{ matrix.go-arch }}
